@page "/Prestamos/Edit/{prestamoId:int}"
@using AndyJavier_AP1_P1.Services
@inject PrestamoServices prestamoServices
@inject NavigationManager NavigationManager

<h3>Editar Pr&eacute;stamo</h3>

@if (prestamo == null)
{
    <p><em>Cargando pr&eacute;stamo...</em></p>
}
else
{
    <EditForm Model="prestamo" OnValidSubmit="GuardarPrestamo">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="monto" class="form-label">Monto</label>
            <InputNumber id="monto" @bind-Value="prestamo.Monto" class="form-control" required />
        </div>

        <div class="mb-3">
            <label for="concepto" class="form-label">Concepto</label>
            <InputText id="concepto" @bind-Value="prestamo.Concepto" class="form-control" required />
        </div>

        <div class="mb-3">
            <label for="deudor" class="form-label">Deudor</label>
            <InputText id="deudor" @bind-Value="prestamo.Deudor.Nombres" class="form-control" required />
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>
}

@code {
    [Parameter]
    public int prestamoId { get; set; }
    private Prestamo prestamo;

    protected override async Task OnInitializedAsync()
    {
        prestamo = await prestamoServices.Buscar(prestamoId);
    }

    private async Task GuardarPrestamo()
    {
        await prestamoServices.Guardar(prestamo);
        NavigationManager.NavigateTo("/Prestamos/Index");
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/Prestamos/Index");
    }
}
